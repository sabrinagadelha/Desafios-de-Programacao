#include<iostream>
#include<vector>
#include<map>
#include<bitset>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef map<int, int> mi;

ll  tamanho;
bitset<32000> bs;
vi primes;

void sieve(ll maximo){
    tamanho = maximo + 1;
    bs.set();
    bs[0] = bs[1] = 0;
    for (ll i = 2; i <= tamanho; i++){
        if(bs[i]){
            for(ll j = i*i; j <= tamanho; j+=i){
                bs[j] = 0;
            }
            primes.push_back((int)i);
        }
    }
}

bool ehPrimo(ll n){
    if(n < tamanho){
        return bs[n];
    }
    for(int i = 0; i < (int)primes.size(); i++){
        if(n % primes[i] == 0){
            return false;
        }
    }
    return true;
}

vi fatoracao_em_primos(ll numero){
    vi fatores;
    ll PF_idx = 0, PF = (ll)primes[PF_idx];
    while(numero != 1 && PF*PF <= numero){
        while(numero%PF == 0){
            numero = numero/PF;
            fatores.push_back(PF);
        }
        PF_idx += 1;
        PF = primes[PF_idx];
    }
    if(numero != 1){
        fatores.push_back(numero);
    }
    return fatores;
}

int main(){
    tamanho = 32000;
    ll n;
    vi fatores;
    int valor = 1;
    scanf("%lld", &n);
    sieve(tamanho);
    //printf("%d\n", ehPrimo(n));
    fatores = fatoracao_em_primos(n);
    for(int i=1; i<(int)fatores.size(); i++){
        valor *= fatores[i];
    }
    cout << n - valor << endl;
    return 0;
}
